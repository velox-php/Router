<?php

namespace Velox\Router;

use Closure;
use LogicException;
use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Velox\Router\Exceptions\NoResponseException;

class RouteRunner
{
    private bool $used = false;
    public ResponseInterface $response;
    private array $vars;

    /**
     * @param ServerRequestInterface $request
     * @param Closure[] $steps
     * @param array $parameters
     */
    public function __construct(
        public readonly ServerRequestInterface $request,
        private array $steps,
        private readonly array $parameters
    ) {

    }

    /**
     * @throws NoResponseException
     */
    public function __invoke(): ResponseInterface {
        if ($this->used) {
            throw new LogicException('Route runner has already been used');
        }

        $this->used = true;
        $this->next();

        if (!isset($this->response)) {
            throw new NoResponseException("No response was generated by route {$this->request->getUri()->getPath()}");
        }

        return $this->response;
    }

    public function next(): void
    {
        $step = array_shift($this->steps);

        if ($step === null) {
            throw new LogicException('No more steps to run');
        }

        $step($this);
    }

    public function getVar(string $name): mixed
    {
        return $this->vars[$name] ?? null;
    }

    public function setVar(string $name, mixed $value): void
    {
        $this->vars[$name] = $value;
    }

    public function getParam(string $name): mixed
    {
        return $this->parameters[$name] ?? null;
    }
}